<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ziliang.blog.dao.SysLogMapper">
    <resultMap id="SysLogResultMap" type="com.ziliang.blog.entity.SysLog">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="ip" jdbcType="VARCHAR" property="ip" />
        <result column="create_by" jdbcType="TIMESTAMP" javaType="java.util.Date" property="createBy" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="operate_url" jdbcType="VARCHAR" property="operateUrl" />
        <result column="operate_by" jdbcType="VARCHAR" property="operateBy" />
    </resultMap>

    <sql id="Base_Column_List">
        id, ip, create_by, remark, operate_url, operate_by
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="SysLogResultMap">
        select
        <include refid="Base_Column_List" />
        from sys_log
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectAllSysLog" resultMap="SysLogResultMap">
        select
        <include refid="Base_Column_List" />
        from sys_log
    </select>

    <select id="numOfSysLog" resultType="int">
        select count(*) as sys_log_num
        from sys_log
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from sys_log
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.ziliang.blog.entity.SysLog" useGeneratedKeys="true">
        insert into sys_log (ip, create_by, remark,
          operate_url, operate_by)
        values (#{ip,jdbcType=VARCHAR}, #{createBy,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR},
          #{operateUrl,jdbcType=VARCHAR}, #{operateBy,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.ziliang.blog.entity.SysLog" useGeneratedKeys="true">
        insert into sys_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="ip != null">
                ip,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="operateUrl != null">
                operate_url,
            </if>
            <if test="operateBy != null">
                operate_by,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="ip != null">
                #{ip,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="operateUrl != null">
                #{operateUrl,jdbcType=VARCHAR},
            </if>
            <if test="operateBy != null">
                #{operateBy,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.ziliang.blog.entity.SysLog">
        update sys_log
        <set>
            <if test="ip != null">
                ip = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="operateUrl != null">
                operate_url = #{operateUrl,jdbcType=VARCHAR},
            </if>
            <if test="operateBy != null">
                operate_by = #{operateBy,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.ziliang.blog.entity.SysLog">
        update sys_log
        set ip = #{ip,jdbcType=VARCHAR},
          create_by = #{createBy,jdbcType=TIMESTAMP},
          remark = #{remark,jdbcType=VARCHAR},
          operate_url = #{operateUrl,jdbcType=VARCHAR},
          operate_by = #{operateBy,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>